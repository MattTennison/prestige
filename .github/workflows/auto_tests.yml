name: All tests

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  backend_tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: "actions/checkout@v2"

      - name: "Setup Python 3.8"
        uses: "actions/setup-python@v2"
        with:
          python-version: 3.8

      - name: "Install Dependencies"
        run: |
          pip install flake8
          pip install -r ../requirements.txt

      - name: "Lint"
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: "Test"
        env:
          PRESTIGE_UNIVERSE: "test"
        run: "python manage.py test"

  frontend_tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn run lint

      - name: Test
        run: yarn test

  e2e_tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: e2e-tests

    steps:
      - uses: actions/checkout@v2

      - name: Get Chrome driver
        run: |
          google-chrome --version | grep -o '[[:digit:]]\+' | head

          CHROME_VERSION=$(google-chrome --version | cut -f 3 -d ' ' | cut -d '.' -f 1)
          echo "CHROME_VERSION: '$CHROME_VERSION'."
          VERSION=$(curl --silent --location --fail --retry 3 \
              http://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)

          wget -c -nc --retry-connrefused --tries=0 -O driver.zip \
            https://chromedriver.storage.googleapis.com/${VERSION}/chromedriver_linux64.zip
          unzip -o -q driver.zip
          sudo mv chromedriver /usr/local/bin/chromedriver
          rm driver.zip

      - name: "Run tests"
        run: "python3 run.py"

      - name: "Upload test results"
        uses: "actions/upload-artifact@v2"
        with:
          name: "shots"
          path: "e2e-tests/shots"
          if-no-files-found: "error"
